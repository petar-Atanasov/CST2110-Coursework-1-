package sumpart1;

import java.util.*;

public class SumPart1 {

    static final byte ROUND = 7;
    static final byte TURNEACHPLAYER = 3;

    public static void main(String[] args) {
        welcomeMessage();
        startGame();
    }

    public static void startGame() {

        Scanner sc = new Scanner(System.in);
        System.out.println();
        System.out.print("Enter (1) to start the game or (0) to exit. ");
        String input = sc.nextLine();
        System.out.println();

        if (input.equals("1")) {
            System.out.println("Game Started. ");
            System.out.println();
//            scoreTable();
            roundCount();
        } else if (input.equals("0")) {
            System.out.println("You chosed to exit the game. Goodbye! ");
            System.exit(0);
        } else {
            System.out.println("Enter the right input. ");
            startGame();
        }
    }

    public static void roundCount() {
        System.out.println();
// player 1 array 
        int[] scores1 = new int[7];
// player 2 array        
        int[] scores2 = new int[7];
        int[] dice;

        int i = 1;
// count the round and display the player's name
        while (i <= ROUND) {
            System.out.println("\n| Round " + i + "  |");
            System.out.println("\n| Player 1 |");

            if (throwOrForfeit()) {
                dice = arrayDice(5);
// count each player's throw
                for (int j = 0; j < TURNEACHPLAYER; j++) {
                    System.out.println("\n| Throw " + (j + 1) + " |");
                    System.out.println();
                    String option = selectCategory();
                    if (option.equals("s")) {
                        selection(dice, scores1, j);
//                        break;

                    } else if (option.equals("d")) {
                        System.out.println();
                        dice = defer();
                    }
                }
            }
            System.out.println("\n| Player 2 |");
            if (throwOrForfeit()) {
                dice = arrayDice(5);

                for (int k = 0; k < TURNEACHPLAYER; k++) {
                    System.out.println("\n| Throw " + (k + 1) + " |");
                    System.out.println();
                    String option = selectCategory();
                    if (option.equals("s")) {
                        selection(dice, scores2, k);
//                        break;

                    } else if (option.equals("d")) {
                        System.out.println();
                        dice = defer();
                    }
                }
            }

            scoreTable(scores1, scores2);
            i++;
        }

    }

    public static boolean throwOrForfeit() {
        Scanner sc = new Scanner(System.in);
        System.out.print("\nPress (t) to throw or (f) to forfeit. ");

        String input = sc.nextLine();
        boolean desicion = false;
        if (input.equals("t")) {
            desicion = true;
            System.out.println();
            return desicion;
        } else if (input.equals("f")) {
            System.out.println("You chosed to forfeit your turn. ");
            return desicion;
        } else {
            System.out.println("Please select the right option. ");
            return throwOrForfeit();
        }
    }
// sekecting category 

    public static String selectCategory() {
        Scanner sc = new Scanner(System.in);
        System.out.println("\nPress (s) to select a category or (d) to defer. ");
        String desicion = sc.nextLine();

        if (desicion.equals("s") || desicion.equals("d")) {
            return desicion;
        } else {
            System.out.println("\nPlease select the right option. ");
            selectCategory();
        }
        return desicion;
    }
// defer method is passed to roundCount 

    public static int[] defer() {

        System.out.println("You have select to defer your throw. ");
        int[] deferDice = arrayDice(5);
        System.out.println();
        return deferDice;
    }

    public static boolean selection(int[] dice, int[] score, int turnNumber) {
        Scanner sc = new Scanner(System.in);
        System.out.print("\nSelect Category: " + " ONES(1), " + " TWOS(2), " + " THREES(3), " + " FOURS(4), " + " FIVES(5), " + " SIXES(6), " + " SEQUENCE(7). ");
        String input = sc.nextLine();
        int category = 0;
        int countDice = 0;
        boolean selectedCategory = false;

        if (input.equals("1") || input.equals("2") || input.equals("3") || input.equals("4")
                || input.equals("5") || input.equals("6") || input.equals("7")) {
            category = Integer.parseInt(input);

            if (score[category - 1] != 0) {
                System.out.println("\nThe category has already been selected, select a category that has not been selected.");
                return selection(dice, score, turnNumber);
            } 
            selectedCategory = true;
        } else {
            System.out.println("\nPlease select the right category. ");
            selection(dice, score, turnNumber);
            return false;
        }

// outter loop 
        for (int i = turnNumber; i < TURNEACHPLAYER - 1; i++) {
// inner loop
            for (int k = 0; k < dice.length; k++) {
                if (dice[k] == category) {
                    countDice+= category; // countDice++;
                }
// get the score for each player 
                score[category - 1] = countDice; // countDice * category;
            }
            if (countDice < 5) {
                System.out.println("You set aside " + countDice + " dices. ");
                dice = new int[5 - countDice];
// give an option if the player wants to trow again or forfeit
                System.out.println("\nPress (t) to throw or (f) forfeit. ");
                input = "";
                dice = new int[5 - countDice];
// depends on the input, while loop is iterating and cheking what have neen entered 
                while (!input.equals("t")) {
                    input = sc.nextLine();
                    switch (input) {
                        case "t":
                            dice = arrayDice(5 - countDice);
                            countDice = 5;
                            break;
                        case "f":
                            return false;
                        default:
                            System.out.println("\nPlease enter the right input. ");
                            break;
                    }
                }
            }
        }
        return true;
    }

    // creating the dice array and decrease it after category is set 
    public static int[] arrayDice(int decrease) {
        int[] roll = new int[decrease];
        int i = 0;
        while (i < decrease) {
            roll[i] = (int) ((Math.random() * 6) + 1);
            // giving the square paranthesses to the array 
            System.out.print("[" + roll[i] + "] ");
            i++;
        }
        System.out.println();
        return roll;
    }
// Display the welcome message after starting the game 

    public static void welcomeMessage() {
        System.out.println("\nWelcome to Dice game.");
        System.out.println("\nThis game is played only from two players.");
        System.out.println("\nEach player has 7 rounds and three throws.");
        System.out.println("\nHope you have fun playing it. ");
    }
// Printed Score table 

    public static void scoreTable(int[] score1, int[] score2) {
//update the score for each player
// get the total and assign it each round and whoever has a greater total after round 7 win 

        System.out.println("\n-------------------------------------------");
        System.out.printf("|%-15s|%-12s|%-12s|", "", "Player 1", "Player 2");
        System.out.print("\n-------------------------------------------");
        System.out.println();

        String[] categories = {"Ones", "Twos", "Threes", "Fours", "Fives", "Sixes", "Sequence(20)"};

        int total1 = 0;
        int total2 = 0;

        for (int i = 0; i < categories.length; i++) {
            System.out.printf("|%-15s|%-12s|%-12s|", categories[i], score1[i], score2[i]);
            System.out.print("\n-------------------------------------------");
            System.out.println();

            total1 += score1[i];
            total2 += score2[i];
        }
        System.out.printf("|%-15s|%-12s|%-12s|", "TOTAL", total1, total2);
        System.out.print("\n-------------------------------------------");
    }
}
